import @{}
  utf8_to_u8
from 'u8-utils'

export @{}
  utf8_to_u8, u8_to_utf8,
  u8_to_hex, hex_to_u8,
from 'u8-utils'


export const u8_maybe_utf8 = u8 =>
  'string' === typeof u8 ? utf8_to_u8(u8) : u8


export function u8_timing_equal(a, b) ::
  const alen = a.length
  let r = alen ^ b.length
  // don't allow short-circut early return
  for let i=0;i<alen;i++ ::
    r |= a[i] ^ b[i]
  return 0 === r


export function u8_fast_equal(a, b) ::
  const alen = a.length
  if b.length !== alen ::
    return false

  for let i=0;i<alen;i++ ::
    if a[i] !== b[i] ::
      return false

  return true


export function ecc_by_len(ec_len, p521='P-521', p384='P-384', p256='P-256', absent) ::
  return 158===ec_len ? p521
    : 120===ec_len ? p384
    : 91===ec_len ? p256
    : absent

export function ecc_mirror(host, ec_len) ::
  const key = ecc_by_len @ ec_len, 'p521', 'p384', 'p256'
  return host[key]

