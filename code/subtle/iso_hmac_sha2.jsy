import {subtle_api} from './iso_crypto_api.jsy'
import {u8_maybe_utf8} from './utils.jsy'

export function _bind_hmac_sha(hash) ::
  return @\ u8_key, u8 ::
    u8_key = u8_maybe_utf8(u8_key)

    const _hkey = subtle_api.importKey @
      'raw', u8_key, {name: 'HMAC', hash},
      false, ['sign', 'verify']

    const hmac_sign = async u8 =>
      new Uint8Array @ await subtle_api.sign @
        {name: 'HMAC'}, await _hkey
        u8_maybe_utf8(u8)

    if u8 ::
      return hmac_sign(u8)

    return @{} hash, hmac_sign,
      async hmac_verify(u8_sig, u8) ::
        return subtle_api.verify @
          {name: 'HMAC'}, await _hkey,
          u8_sig, u8


export const u8_hmac_sha_256 = /* #__PURE__ */ _bind_hmac_sha('SHA-256')
export const u8_hmac_sha_384 = /* #__PURE__ */ _bind_hmac_sha('SHA-384')
export const u8_hmac_sha_512 = /* #__PURE__ */ _bind_hmac_sha('SHA-512')

export @{}
  u8_hmac_sha_256 as u8_hmac_sha,
  u8_hmac_sha_256 as u8_hmac,

