import {as_arrbuf} from './utils.jsy'

/* #__NO_SIDE_EFFECTS__ */
export function _bind_hmac_sha(hash) ::
  const subtle_api = globalThis.crypto.subtle

  const name = 'HMAC'
  return @\ hmac_key, buf ::
    const _hkey = as_arrbuf(hmac_key)
      .then @ hmac_key =>
        subtle_api.importKey @
          'raw', hmac_key, {name, hash},
          false, ['sign', 'verify']

    const hmac_sign = async buf =>
      await subtle_api.sign @
        {name}, await _hkey
        await as_arrbuf(buf)

    if buf ::
      return hmac_sign(buf)

    return @{} hash, hmac_sign,
      async hmac_verify(u8_sig, buf) ::
        return subtle_api.verify @
          {name}, await _hkey,
          u8_sig, buf


export const u8_hmac_sha_256 = _bind_hmac_sha('SHA-256')
export const u8_hmac_sha_384 = _bind_hmac_sha('SHA-384')
export const u8_hmac_sha_512 = _bind_hmac_sha('SHA-512')

export @{}
  u8_hmac_sha_256 as u8_hmac_sha,
  u8_hmac_sha_256 as u8_hmac,

