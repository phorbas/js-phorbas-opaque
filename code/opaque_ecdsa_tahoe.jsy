import {kdf_sha_256} from './opaque_basic.jsy'
import {bind_tahoe_cipher} from './opaque_tahoe.jsy'
import {bind_ecdsa_codec, opaque_ecdsa} from './opaque_ecdsa.jsy'

import @{}
  u8_aes_256_gcm
  u8_hmac_sha_256
  u8_ecdsa_sha_256
from './subtle.jsy'


export const kdf_hmac_phorbas =
  u8_hmac_sha_256('phorbas').hmac_sign


export const opaque_ecdsa_tahoe = Object.freeze @:
  ... opaque_ecdsa
  ciphered: true

  key_proto: Object.freeze @
    bind_tahoe_ecdsa @:
      cipher: u8_aes_256_gcm
      kdf_ec: kdf_sha_256
      ecdsa_signer: u8_ecdsa_sha_256.p521
      ecdsa_verify: u8_ecdsa_sha_256.verify

export function bind_tahoe_ecdsa(kw_cfg) ::
  return @{}
    ... bind_tahoe_cipher(kw_cfg.cipher)
    ... bind_ecdsa_codec(kw_cfg)

    // 1 of 4 bytes of k1ref are present in k2loc; hash the AES encryption key an additional time
    _kdf_secret: kdf_hmac_phorbas
