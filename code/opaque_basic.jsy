import {utf8_to_u8, u8_to_utf8} from './subtle/utils.jsy'
import {opaque_core_api} from './opaque_core_api.jsy'
import {u8_crypto_random, u8_sha_256} from './subtle.jsy'


export const kdf_random_16 = () => u8_crypto_random(16)
export const kdf_sha_256 = u8 => u8_sha_256(u8)

const _as_u8_async = async u8 => u8 && new Uint8Array(u8)

export const opaque_key_proto = @{}
  ciphered: false
  k21pair() :: return [this.k2loc, this.k1ref]

  encode_content: _as_u8_async
  decode_content: _as_u8_async
  encode_utf8: async utf8 => utf8_to_u8(utf8)
  decode_utf8: async u8 => u8_to_utf8(u8)


export const opaque_basic_api = /* #__PURE__ */ @{}
  ... opaque_core_api
  ciphered: false

  _kdf0_random: kdf_random_16
  _kdf0_hash: kdf_sha_256
  _kdf1_ref: kdf_sha_256
  _kdf2_loc: kdf_sha_256

  key_proto: opaque_key_proto

  _init_key(is_new) :: return {__proto__: this.key_proto}
  _finish_key(kctx) :: return kctx

  _clone(ctx) :: return {__proto__: this, as_session: null, ...ctx}


export const opaque_basic = /* #__PURE__ */ Object.freeze @:
  ... opaque_basic_api

