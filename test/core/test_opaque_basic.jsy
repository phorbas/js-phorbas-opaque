import {describe, it} from 'node:test'
import {expect} from 'chai'

import {opaque_core_api, opaque_basic} from '@phorbas/opaque'

import { _expect_core_api, _expect_full_api, _expect_okey } from '../_check_opaque_utils.jsy'


describe @ 'opaque core & basics', @::
  describe @ 'shape', @::
    it @ 'shape of opaque_core_api', @::>
      await _expect_core_api @ opaque_core_api, {skip_okey: true}

    it @ 'shape of opaque_basic', @::>
      await _expect_full_api @ opaque_basic

    it @ 'shape of opaque_basic.as_core()', @::>
      await _expect_core_api @ opaque_basic.as_core()


  it @ 'opaque_basic.from_content(u8)', @::>
    const p_okey = opaque_basic.from_content @
      new Uint8Array @# 10,12,14,16
    expect(p_okey).to.be.a('promise')

    const okey = await p_okey
    await _expect_okey(okey, false)

    expect(okey.hk1ref)
    .to.deep.equal @ "0e3f601857911eccb26954151fdd238614138e25de92531f834e1dd68ab5e89b"

    expect(okey.hk2loc)
    .to.deep.equal @ "127755b4d6d7d7a3508203ea1d6d55da047747bdba69b4dd89535ab2656763cd"

    expect(okey[1]).to.equal @ okey.hk1ref
    expect(okey[0]).to.equal @ okey.hk2loc


  it @ 'opaque_basic.from_content(string)', @::>
    const p_okey = opaque_basic.from_content @
      'some example content', true
    expect(p_okey).to.be.a('promise')

    const okey = await p_okey
    await _expect_okey(okey, false)

    expect(okey.hk1ref)
    .to.deep.equal @ "9b05a4d2f05971731b4739415262dcb7b1ac05c9ec3c135280e1212fac555f23"

    expect(okey.hk2loc)
    .to.deep.equal @ "cb27470ffe7164a6b29613baf7193deca8db4ef9c880ea0345a4549f4ad63ecd"

    expect(okey[1]).to.equal @ okey.hk1ref
    expect(okey[0]).to.equal @ okey.hk2loc


  it @ 'opaque_basic.from_random', @::>
    const p_okey = opaque_basic.from_random()
    expect(p_okey).to.be.a('promise')

    const okey = await p_okey
    await _expect_okey(okey, false)

